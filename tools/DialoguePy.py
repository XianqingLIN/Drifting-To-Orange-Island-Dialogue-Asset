# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Dialogue

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Command(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Command()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCommand(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Command
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Command
    def CommandType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Command
    def Parameters(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # Command
    def ParametersLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Command
    def ParametersIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def CommandStart(builder):
    builder.StartObject(2)

def CommandAddCommandType(builder, commandType):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(commandType), 0)

def CommandAddParameters(builder, parameters):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(parameters), 0)

def CommandStartParametersVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def CommandEnd(builder):
    return builder.EndObject()



class DialogueBlock(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DialogueBlock()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDialogueBlock(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DialogueBlock
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DialogueBlock
    def BlockName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DialogueBlock
    def Commands(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = Command()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DialogueBlock
    def CommandsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DialogueBlock
    def CommandsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def DialogueBlockStart(builder):
    builder.StartObject(2)

def DialogueBlockAddBlockName(builder, blockName):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(blockName), 0)

def DialogueBlockAddCommands(builder, commands):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(commands), 0)

def DialogueBlockStartCommandsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def DialogueBlockEnd(builder):
    return builder.EndObject()



class DialogueFlowchart(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DialogueFlowchart()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDialogueFlowchart(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DialogueFlowchart
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DialogueFlowchart
    def ChartName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DialogueFlowchart
    def Blocks(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = DialogueBlock()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DialogueFlowchart
    def BlocksLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DialogueFlowchart
    def BlocksIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def DialogueFlowchartStart(builder):
    builder.StartObject(2)

def DialogueFlowchartAddChartName(builder, chartName):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(chartName), 0)

def DialogueFlowchartAddBlocks(builder, blocks):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(blocks), 0)

def DialogueFlowchartStartBlocksVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def DialogueFlowchartEnd(builder):
    return builder.EndObject()



